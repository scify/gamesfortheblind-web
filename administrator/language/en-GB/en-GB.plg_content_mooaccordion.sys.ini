PLG_CONTENT_MOOACCORDION="Content - MooAccordion"
PLG_CONTENT_MOOACCORDION_XML_DESCRIPTION="<h3>MooAccordion</h3>
<p>This plugin searches for the existence of the 'mooaccordion' class and renders clickable headings for collapsable "accordion" content.</p>
<p>Each item found with the mooaccordion class is paired with the tag immediately following it.</p>
<h4>Simple Usage:</h4>
<pre>
&lt;strong class=\"mooaccordion\"&gt;Accordion Label 1&lt;/strong&gt;
&lt;p&gt;Accordion Content 1 ...&lt;/p&gt;
&lt;strong class=\"mooaccordion\"&gt;Accordion Label 2&lt;/strong&gt;
&lt;p&gt;Accordion Content 2 ...&lt;/p&gt;
&lt;strong class=\"mooaccordion\"&gt;Accordion Label 3&lt;/strong&gt;
&lt;div&gt;
  &lt;p&gt;Accordion Content 3 paragraph 1 ...&lt;/p&gt;
  &lt;p&gt;Accordion Content 3 paragraph 2 ...&lt;/p&gt;
&lt;/div&gt;
</pre>
<p>MooAccordion locates all items with the mooaccordion class and puts them into a common container with each label containing the click activation for the accordion effect.</p>
<p>The label and content tags are not important.  Note content 3 contains 2 paragraphs.  In order to associate both paragraphs with the accordion label, they are both contained within a div tag.  This is done because the plugin identifies the 1st tag following the accordion label as the accordion content.</p>
<h4>Advanced Usage:</h4>
<pre>
&lt;div&gt;
  &lt;h2&gt;Accordion Group 1&lt;/h2&gt;
  &lt;strong class=\"mooaccordion\"&gt;Accordion Label 1&lt;/strong&gt;
  &lt;p&gt;Accordion Content 1 ...&lt;/p&gt;
  &lt;strong class=\"mooaccordion\"&gt;Accordion Label 2&lt;/strong&gt;
  &lt;p&gt;Accordion Content 2 ...&lt;/p&gt;
  &lt;strong class=\"mooaccordion\"&gt;Accordion Label 3&lt;/strong&gt;
  &lt;div&gt;
    &lt;p&gt;Accordion Content 3 paragraph 1 ...&lt;/p&gt;
    &lt;p&gt;Accordion Content 3 paragraph 2 ...&lt;/p&gt;
  &lt;/div&gt;
&lt;/div&gt;
&lt;div&gt;
  &lt;h2&gt;Accordion Group 2&lt;/h2&gt;
  &lt;strong class=\"mooaccordion\"&gt;Accordion Label 1&lt;/strong&gt;
  &lt;p&gt;Accordion Content 1 ...&lt;/p&gt;
  &lt;strong class=\"mooaccordion\"&gt;Accordion Label 2&lt;/strong&gt;
  &lt;p&gt;Accordion Content 2 ...&lt;/p&gt;
  &lt;strong class=\"mooaccordion\"&gt;Accordion Label 3&lt;/strong&gt;
  &lt;div&gt;
    &lt;p&gt;Accordion Content 3 paragraph 1 ...&lt;/p&gt;
    &lt;p&gt;Accordion Content 3 paragraph 2 ...&lt;/p&gt;
  &lt;/div&gt;
&lt;/div&gt;
</pre>
<p>MooAccordion is capable of implementing multiple accordion groups.  Groups are created based on their parent element.  All elements with the mooaccordion class are associated with their parent item.  Each parent is then processed with a unique accordion group.</p>
<p>In order to implement multiple groups, the grouped items must be contained within different parent elements.  The example above will create 2 independent groups of accordion items.  In this case, 2 items can be open simultaneously (1 from each group).</p>
<h4>Nested Usage:</h4>
<pre>
&lt;div&gt;
  &lt;strong class=\"mooaccordion\"&gt;Accordion Level 0.1&lt;/strong&gt;
  &lt;div&gt;
    &lt;strong class=\"mooaccordion\"&gt;Accordion Level 1.0.1&lt;/strong&gt;
    &lt;div&gt;
      &lt;strong class=\"mooaccordion\"&gt;Accordion Level 3.1.1&lt;/strong&gt;
      &lt;div&gt;Level 3 - item 1&lt;/div&gt;
    &lt;/div&gt;
    &lt;strong class=\"mooaccordion\"&gt;Accordion Level 1.0.2&lt;/strong&gt;
    &lt;div&gt;Level 2 - item 2&lt;/div&gt;
    &lt;strong class=\"mooaccordion\"&gt;Accordion Level 1.0.3&lt;/strong&gt;
    &lt;div&gt;Level 2 - item 3&lt;/div&gt;
  &lt;/div&gt;
  &lt;strong class=\"mooaccordion\"&gt;Accordion Level 0.2&lt;/strong&gt;
  &lt;div&gt;Level 1 - item 2&lt;/div&gt;
  &lt;strong class=\"mooaccordion\"&gt;Accordion Level 0.3&lt;/strong&gt;
  &lt;div&gt;
    &lt;p&gt;Level 1 - item 3 - paragraph 1&lt;p&gt;
    &lt;p&gt;Level 1 - item 3 - paragraph 2&lt;p&gt;
  &lt;/div&gt;
&lt;/div&gt;
</pre>
<h4>Using the plugin tag</h4>
<p>{content-mooaccordion [OPTIONS]}</p>
<p>One plugin tag within the content per accordion group to be modified.  Groups with no modifications will be displayed with defaults.  It is not necessary to include plugin options for every accordion group that you intend to be displayed with defaults.</p>
<ul>
<li>id='cssid':&nbsp;HTML ID of the parent item which these settings will apply.</li>
<li>allowallclosed:&nbsp;Flags the accordion group to allow all items to be closed</li>
<li>display='number':&nbsp;Logical number of the item to be open by default.  Note, the first item in an accordion list is 0.</li>
<li>openedclass='[classnames]':&nbsp;CSS classes applied to open accordion items.</li>
<li>closedclass='[classnames]':&nbsp;CSS classes applied to closed accordion items.</li>
<li>template='number':&nbsp;Pre-defined CSS template to be used on this accordion group.  Using this feature overrides the openedclass and closedclass options.  Three pre-defined templates are included with this plugin and are numbered 1, 2 and 3.</li>
</ul>
<h4>Examples</h4>
<pre>
&lt;div id=\"myaccordionid\">
  &lt;strong class=\"mooaccordion\"&gt;Accordion Label 1&lt;/strong&gt;
  &lt;div&gt;Accordion Content 1 ...&lt;/div&gt;
  &lt;strong class=\"mooaccordion\"&gt;Accordion Label 2&lt;/strong&gt;
  &lt;div&gt;Accordion Content 2 ...&lt;/div&gt;
  &lt;strong class=\"mooaccordion\"&gt;Accordion Label 3&lt;/strong&gt;
  &lt;div&gt;
    &lt;p&gt;Accordion Content 3 paragraph 1 ...&lt;/p&gt;
    &lt;p&gt;Accordion Content 3 paragraph 2 ...&lt;/p&gt;
  &lt;/div&gt;
&lt;/div&gt;
</pre>
<ul>
<li>{content-mooaccordion id='myaccordionid' allowallclosed}
<ul><li>This accordion will be displayed with defaults and all items will be hidden.</li></ul>
</li>
<li>{content-mooaccordion id='myaccordionid' default='2'}
<ul><li>The third item will be opened on page load.</li></ul>
</li>
<li>{content-mooaccordion id='myaccordionid' template='2'}
<ul><li>The 2nd template will be used</li></ul>
</li>
<li>{content-mooaccordion id='myaccordionid' openedclass='mymooopenclass'}
<ul><li>'mymooopenclass' will be added to the toggler class list when an item is opened.  When the item is closed, the class will be removed.</li></ul>
</li>
<li>{content-mooaccordion id='myaccordionid' closedclass='mymoocloseclass'}
<ul><li>'mymoocloseclass' will be added to the toggler class list when an item is closed.  When the item is opened, the class will be removed.</li></ul>
</li>
<li>{content-mooaccordion id='myaccordionid' closedclass='mymoocloseclass' id='myaccordionid2' template='2'}
<ul><li>Customizing 2 accordions.</li></ul>
</li>
</ul>
<h4>Important Notes</h4>
<ol>
<li>Accordion labels will contain the mooaccordion class and will also contain mooaccordionN (where N is the number of the accordion group)</li>
<li>Toggler icons will always have a class 'mooaccordionicon' and be found as the first child of the outermost tag of the toggler element.</li>
<li>Accordion groups not customized will receive a 'mooaccordiondefaulttoggle' class.</li>
<li>Accordion content may appear strange if content or toggler items are different types.  For example, the first content is a <strong>p</strong> and the second is a <strong>div</strong> - the first may not fully collapse due to <strong>p</strong> margins where the <strong>div</strong> has none. The solution is to wrap all content in a common tag (div is recommended).  Both examples above illustrate this behavior if your template has assigned a margin to the p tag.</li>
</ol>"
PLG_CONTENT_MOOACCORDION_DEFAULT_STYLE_LABEL="Default CSS"
PLG_CONTENT_MOOACCORDION_DEFAULT_STYLE_DESC="<p>Styling to be applied to accordion elements.</p><p>Special tags indicate text that should be replaced with corrected values:  {root} = Joomla Root (convenient if your site is in a subfolder of your domain).  Need others?  Make a request.</p><p>Styling with your template?  Leave this textarea blank.</p>"