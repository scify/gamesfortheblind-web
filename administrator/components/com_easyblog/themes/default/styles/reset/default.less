form {
	margin: 0;
}

.inputbox,
select[size="1"] {
  display: block;
  width: 100%;
  height: @input-height-base; // Make inputs at least the height of their button counterpart (base line-height + padding + border)
  padding: @padding-base-vertical @padding-base-horizontal;
  font-size: @font-size-base;
  line-height: @line-height-base;
  color: @input-color;
  vertical-align: middle;
  background-color: @input-bg;
  background-image: none; // Reset unusual Firefox-on-Android default style; see https://github.com/necolas/normalize.css/issues/214
  border: 1px solid @input-border;
  border-radius: @input-border-radius;
  .box-shadow(inset 0 1px 1px rgba(0,0,0,.075));
  .transition(~"border-color ease-in-out .15s, box-shadow ease-in-out .15s");

  // Customize the `:focus` state to imitate native WebKit styles.
  .form-control-focus();

  // Placeholder
  //
  // Placeholder text gets special styles because when browsers invalidate entire
  // lines if it doesn't understand a selector/
  .placeholder();

  // Disabled and read-only inputs
  // Note: HTML5 says that controls under a fieldset > legend:first-child won't
  // be disabled if the fieldset is disabled. Due to implementation difficulty,
  // we don't honor that edge case; we style them as disabled anyway.
  &[disabled],
  &[readonly],
  fieldset[disabled] & {
    cursor: not-allowed;
    background-color: @input-bg-disabled;
  }

}

.clearfix {
	&:before,
	&:after {
		display: table;
		content: "";
		line-height: 0;
	}

	&:after {
		clear: both;
	}
}

.hide, .hidden {
	display: none !important;
}

.reset-heading {
	background: none;
	border: medium none;
	clear: none;
	display: block;
	float: none;
	margin: 0;
	padding: 0;
	position: static;
	width: auto;
}

.reset-list,
.reset-list > li {
	background: none;
	border: none;
	clear: none;
	float: none;
	list-style: none;
	list-style-image: none;
	margin: 0;
	padding: 0;
	overflow: visible;
	width: auto;
}

.float-list > li {
	float: left;
}

.row-table {
	display: table;
	width: 100%;

	&.layout-fixed {
		table-layout: fixed;
	}

	&.pull-left,
	&.pull-right {
		width: auto;
	}
}

.row-table-form {
	display: table;

	.col-cell + .col-cell {
		padding: 0 0 0 5px;
	}
}

.col-cell {
	display: table-cell;
	vertical-align: middle;
}

.cell-close {
	cursor: pointer;
}

.cell-sign {
	padding: 0 10px 0 0;
}

.cell-ellipse {
    .text-overflow();
    max-width: 0; // Doesn't matter what the width is
}

.cell-tight {
	width: 1px;
	white-space: nowrap;
}

.cell-clear-right {
	padding-right: 0 !important;
}

.align-middle,
.align-middle .col-cell {
	vertical-align: middle;
}

.align-top,
.align-top .col-cell {
	vertical-align: top;
}

.form-inline .form-group {
    margin-left: 0;
    margin-right: 0;
}

.spans-seperator {
	min-height: 0;
	line-height: 1.2em;
	overflow: hidden;
	float: none;
	margin: 0;
	padding: 0;
	clear: none;

	> span {
		float: left;
		line-height: 1;

		+ span {
			margin: 0 0 0 10px;
			padding: 0 0 0 10px;
			border-left: 1px solid #ddd;
		}
	}
}